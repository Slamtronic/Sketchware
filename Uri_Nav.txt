[{"code":"//Uri_Nav\n//public ###Rcv ###maniver ;\npublic static String getFilePathFrom###(Context context, Uri uri) {\n    String filePath \u003d \"nofile\";\n    // DocumentProvider\n    if (DocumentsContract.isDocumentUri(context, uri)) {\n        String docId \u003d DocumentsContract.getDocumentId(uri);\n        String[] split \u003d docId.split(\":\");\n        String type \u003d split[0];\n        if (\"primary\".equalsIgnoreCase(type)) {\n            filePath \u003d Environment.getExternalStorageDirectory() + \"/\" + split[1];\n        }\n    }return filePath;\n}\n\n//////////////////////////////////////////////////\nprivate void open###File(Uri uri) {\n    if (uri !\u003d null) {\n        try {\n            Intent intent \u003d new Intent(Intent.ACTION_VIEW);\nintent.setDataAndType(uri, getContentResolver().getType(uri));\n            intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n            Intent chooser \u003d Intent.createChooser(intent, \"Open file with\");\n            startActivity(chooser);\n\n        } catch (Exception e) {\n            e.printStackTrace(); // Log the exception\n            Toast.makeText(this, \"Error opening file: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\n        }\n    } else {\n        Toast.makeText(this, \"Invalid file URI\", Toast.LENGTH_SHORT).show();\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n@Override\n\tprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\nIntent _###Intent\u003dnull;\nboolean  _is###\u003dfalse;\nDocumentFile  _p###Dir\u003dnull;\nList\u003cString\u003e  _list###\u003dnull;\nUri   ###Uri\u003ddata.getData();\nString _filep###\u003d\"no file\";\n\t\tif (requestCode \u003d\u003d 1 \u0026\u0026 resultCode \u003d\u003d RESULT_OK \u0026\u0026 data !\u003d null) {\n\t\t//fileUri \u003d data.getData();\n_p###Dir \u003d DocumentFile.fromTreeUri(this, ###Uri) ;\n    _list### \u003d ###Uri.getPathSegments() ;\n}\nif (requestCode \u003d\u003d 2 \u0026\u0026 resultCode \u003d\u003d RESULT_OK \u0026\u0026 data !\u003d null) {\n        ###Uri \u003d data.getData();\nif (###Uri !\u003d null) {_is###\u003dtrue ;\n _filep###\u003dgetFilePathFrom###(this,###Uri) ;\n; \n} else {\n           Toast.makeText(this, \"No file selected\", Toast.LENGTH_SHORT).show();  }\n          \n           \n    }\nif (requestCode \u003d\u003d 3 \u0026\u0026 resultCode \u003d\u003d RESULT_OK \u0026\u0026 data !\u003d null)\n{ open###File(###Uri) ;}\n\nif (requestCode \u003d\u003d 4){\n_###Intent\u003d###Intent ;\n}\n\nif (requestCode \u003d\u003d 5){\n//_###Intent\u003d###Intent ;\n}\n\n%s}","s":"true","imports":"","name":"Uri_Nav"}]
[{"code":"if(requestCode\u003d\u003d1){\n%s}","var":"Uri_Nav","headerSpec":"list of dirs\n%m.List\u003cString\u003e.list### lastParentDir %m.DocumentFile.p###Dir listfiles  ","name":"gtPathdir()","listener":"Uri_Nav","icon":"2131165197","description":"list structur to dir","parameters":""},{"code":"if(requestCode\u003d\u003d2){\n%s}","var":"Uri_Nav","headerSpec":"excut other functinon %b.islaunch %s.filep###","name":"getFilePath()","listener":"Uri_Nav","icon":"2131165300","description":"get path to file","parameters":""},{"code":"if(requestCode\u003d\u003d3){\n%s}","var":"Uri_Nav","headerSpec":"islaunching %b.is###","name":"opnFile()","listener":"Uri_Nav","icon":"2131165462","description":"open file content by \nlaunching other app","parameters":""},{"code":"if(requestCode\u003d\u003d4){\n%s}","var":"Uri_Nav","headerSpec":"intent action %m.Intent.###Intent","name":"receivBroadcast()","listener":"Uri_Nav","icon":"2131165291","description":"receive broadcast","parameters":""}]